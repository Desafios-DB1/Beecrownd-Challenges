// <auto-generated />
using System;
using BatalhaDePokemons.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BatalhaDePokemons.Infra.Migrations
{
    [DbContext(typeof(PokemonsDbContext))]
    [Migration("20250404112124_RenameColumnPP")]
    partial class RenameColumnPP
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BatalhaDePokemons.Domain.Models.Ataque", b =>
                {
                    b.Property<Guid>("AtaqueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AtaqueId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Poder")
                        .HasColumnType("int")
                        .HasColumnName("Poder");

                    b.Property<int>("Precisao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50)
                        .HasColumnName("Precisao");

                    b.Property<int>("QuantUsos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5)
                        .HasColumnName("PP");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tipo");

                    b.HasKey("AtaqueId");

                    b.ToTable("Ataques", (string)null);
                });

            modelBuilder.Entity("BatalhaDePokemons.Domain.Models.Pokemon", b =>
                {
                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PokemonId");

                    b.Property<bool>("IsDesmaiado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDesmaiado");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("Level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tipo");

                    b.HasKey("PokemonId");

                    b.ToTable("Pokemons", (string)null);
                });

            modelBuilder.Entity("BatalhaDePokemons.Domain.Models.PokemonAtaque", b =>
                {
                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PokemonId");

                    b.Property<Guid>("AtaqueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AtaqueId");

                    b.HasKey("PokemonId", "AtaqueId");

                    b.HasIndex("AtaqueId");

                    b.ToTable("PokemonAtaque", (string)null);
                });

            modelBuilder.Entity("BatalhaDePokemons.Domain.Models.Pokemon", b =>
                {
                    b.OwnsOne("BatalhaDePokemons.Domain.Models.StatusDeCombate", "Status", b1 =>
                        {
                            b1.Property<Guid>("PokemonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Atk")
                                .HasColumnType("int")
                                .HasColumnName("Atk");

                            b1.Property<int>("Def")
                                .HasColumnType("int")
                                .HasColumnName("Def");

                            b1.Property<int>("Hp")
                                .HasColumnType("int")
                                .HasColumnName("Hp");

                            b1.Property<int>("Spd")
                                .HasColumnType("int")
                                .HasColumnName("Spd");

                            b1.HasKey("PokemonId");

                            b1.ToTable("Pokemons");

                            b1.WithOwner()
                                .HasForeignKey("PokemonId");
                        });

                    b.Navigation("Status")
                        .IsRequired();
                });

            modelBuilder.Entity("BatalhaDePokemons.Domain.Models.PokemonAtaque", b =>
                {
                    b.HasOne("BatalhaDePokemons.Domain.Models.Ataque", "Ataque")
                        .WithMany("PokemonAtaques")
                        .HasForeignKey("AtaqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BatalhaDePokemons.Domain.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonAtaques")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ataque");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("BatalhaDePokemons.Domain.Models.Ataque", b =>
                {
                    b.Navigation("PokemonAtaques");
                });

            modelBuilder.Entity("BatalhaDePokemons.Domain.Models.Pokemon", b =>
                {
                    b.Navigation("PokemonAtaques");
                });
#pragma warning restore 612, 618
        }
    }
}
